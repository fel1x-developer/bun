const bun = @import("root").bun;
const jsc = bun.jsc;

pub const Classes = struct {
    pub const Blob = jsc.WebCore.Blob;
    pub const HTMLRewriter = jsc.Cloudflare.HTMLRewriter;
    pub const Element = jsc.Cloudflare.Element;
    pub const Comment = jsc.Cloudflare.Comment;
    pub const TextChunk = jsc.Cloudflare.TextChunk;
    pub const DocType = jsc.Cloudflare.DocType;
    pub const DocEnd = jsc.Cloudflare.DocEnd;
    pub const EndTag = jsc.Cloudflare.EndTag;
    pub const AttributeIterator = jsc.Cloudflare.AttributeIterator;
    pub const CryptoHasher = jsc.API.Bun.Crypto.CryptoHasher;
    pub const Dirent = jsc.Node.Dirent;
    pub const Expect = jsc.Expect.Expect;
    pub const ExpectAny = jsc.Expect.ExpectAny;
    pub const ExpectAnything = jsc.Expect.ExpectAnything;
    pub const ExpectCustomAsymmetricMatcher = jsc.Expect.ExpectCustomAsymmetricMatcher;
    pub const ExpectMatcherContext = jsc.Expect.ExpectMatcherContext;
    pub const ExpectMatcherUtils = jsc.Expect.ExpectMatcherUtils;
    pub const ExpectStatic = jsc.Expect.ExpectStatic;
    pub const ExpectCloseTo = jsc.Expect.ExpectCloseTo;
    pub const ExpectObjectContaining = jsc.Expect.ExpectObjectContaining;
    pub const ExpectStringContaining = jsc.Expect.ExpectStringContaining;
    pub const ExpectStringMatching = jsc.Expect.ExpectStringMatching;
    pub const ExpectArrayContaining = jsc.Expect.ExpectArrayContaining;
    pub const FileSystemRouter = jsc.API.FileSystemRouter;
    pub const Glob = jsc.API.Glob;
    pub const ShellInterpreter = jsc.API.Shell.Interpreter;
    pub const ParsedShellScript = jsc.API.Shell.ParsedShellScript;
    pub const Bundler = jsc.API.JSBundler;
    pub const JSBundler = Bundler;
    pub const Transpiler = jsc.API.JSTranspiler;
    pub const JSTranspiler = Transpiler;
    pub const Listener = jsc.API.Listener;
    pub const MatchedRoute = jsc.API.MatchedRoute;
    pub const NodeJSFS = jsc.Node.NodeJSFS;
    pub const Request = jsc.WebCore.Request;
    pub const Response = jsc.WebCore.Response;
    pub const MD4 = jsc.API.Bun.Crypto.MD4;
    pub const MD5 = jsc.API.Bun.Crypto.MD5;
    pub const SHA1 = jsc.API.Bun.Crypto.SHA1;
    pub const SHA224 = jsc.API.Bun.Crypto.SHA224;
    pub const SHA256 = jsc.API.Bun.Crypto.SHA256;
    pub const SHA384 = jsc.API.Bun.Crypto.SHA384;
    pub const SHA512 = jsc.API.Bun.Crypto.SHA512;
    pub const SHA512_256 = jsc.API.Bun.Crypto.SHA512_256;
    pub const ServerWebSocket = jsc.API.ServerWebSocket;
    pub const Stats = jsc.Node.StatsSmall;
    pub const BigIntStats = jsc.Node.StatsBig;
    pub const Subprocess = jsc.Subprocess;
    pub const ResourceUsage = jsc.ResourceUsage;
    pub const TCPSocket = jsc.API.TCPSocket;
    pub const TLSSocket = jsc.API.TLSSocket;
    pub const UDPSocket = jsc.API.UDPSocket;
    pub const TextDecoder = jsc.WebCore.TextDecoder;
    pub const Timeout = jsc.API.Bun.Timer.TimerObject;
    pub const BuildArtifact = jsc.API.BuildArtifact;
    pub const BuildMessage = jsc.BuildMessage;
    pub const ResolveMessage = jsc.ResolveMessage;
    pub const FSWatcher = jsc.Node.FSWatcher;
    pub const StatWatcher = jsc.Node.StatWatcher;
    pub const HTTPServer = jsc.API.HTTPServer;
    pub const HTTPSServer = jsc.API.HTTPSServer;
    pub const DebugHTTPServer = jsc.API.DebugHTTPServer;
    pub const DebugHTTPSServer = jsc.API.DebugHTTPSServer;
    pub const Crypto = jsc.WebCore.Crypto;
    pub const FFI = jsc.FFI;
    pub const H2FrameParser = jsc.API.H2FrameParser;
    pub const FileInternalReadableStreamSource = jsc.WebCore.FileReader.Source;
    pub const BlobInternalReadableStreamSource = jsc.WebCore.ByteBlobLoader.Source;
    pub const BytesInternalReadableStreamSource = jsc.WebCore.ByteStream.Source;
    pub const PostgresSQLConnection = jsc.Postgres.PostgresSQLConnection;
    pub const PostgresSQLQuery = jsc.Postgres.PostgresSQLQuery;
    pub const TextEncoderStreamEncoder = jsc.WebCore.TextEncoderStreamEncoder;
    pub const NativeZlib = jsc.API.NativeZlib;
    pub const NativeBrotli = jsc.API.NativeBrotli;
    pub const FrameworkFileSystemRouter = bun.bake.FrameworkRouter.JSFrameworkRouter;
    pub const DNSResolver = jsc.DNS.DNSResolver;

    pub const S3Client = jsc.WebCore.S3Client;
    pub const S3Stat = jsc.WebCore.S3Stat;
};
